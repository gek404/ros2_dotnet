version: '{branch}-{build}'

branches:
  only:
    - appveyor

image: 
    - Ubuntu1804
    - Visual Studio 2017

environment:
  PYTHON3: "c:\\Python37"
  
before_build:
  - cmd: >- 
        cd c:\

        md download

        cd download

        choco install -y wget cmake

        set PATH=C:\\Program Files\\CMake\\bin;%PATH%

        appveyor DownloadFile https://github.com/ros2/choco-packages/releases/download/2018-06-12-1/asio.1.12.1.nupkg

        appveyor DownloadFile https://github.com/ros2/choco-packages/releases/download/2018-06-12-1/eigen.3.3.4.nupkg

        appveyor DownloadFile https://github.com/ros2/choco-packages/releases/download/2017-04-04-1/tinyxml-usestl.2.6.2.nupkg

        appveyor DownloadFile https://github.com/ros2/choco-packages/releases/download/2018-06-12-1/tinyxml2.6.0.0.nupkg

        choco install -y -s c:\download\ asio eigen tinyxml-usestl tinyxml2

        choco install -y patch curl cppcheck

        setx -m OPENSSL_CONF C:\OpenSSL-Win64\bin\openssl.cfg

        set PATH=C:\OpenSSL-Win64\bin;%PATH%

        setx AMENT_PYTHON_EXECUTABLE "c:\Python37"

        refreshenv

        set PATH=%PYTHON3%;%PYTHON3%\\bin;%PYTHON3%\\Scripts;%PATH%

        python -m pip install -U catkin_pkg EmPy lxml numpy pyparsing pyyaml setuptools colcon-common-extensions pip git+https://github.com/lark-parser/lark.git@0.7d

        python -m pip install -U pytest coverage mock flake8 flake8-blind-except flake8-builtins flake8-class-newline flake8-comprehensions flake8-deprecated flake8-docstrings flake8-import-order flake8-quotes pep8 pydocstyle

  - sh: >-
        sudo python -m pip install -U vcstool

        locale-gen en_US en_US.UTF-8
        update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
        export LANG=en_US.UTF-8
        
        sudo apt update && sudo apt install curl gnupg2 lsb-release tree
        
        curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -

        sudo sh -c 'echo "deb [arch=amd64,arm64] http://packages.ros.org/ros2/ubuntu `lsb_release -cs` main" > /etc/apt/sources.list.d/ros2-latest.list'

        sudo apt install -y python-rosdep python

        sudo rosdep init

        rosdep update

        export DEBIAN_FRONTEND=noninteractive 

        sudo apt-get update && sudo apt-get install -y \
            python3-colcon-common-extensions


  - cmd: >- 
        cd c:\proj

        curl -o ros2_dashing.zip -L https://github.com/ros2/ros2/releases/download/release-dashing-20190614/ros2-dashing-20190614-windows-release-amd64.zip 

        unzip ros2_dashing.zip

        rm ros2_dashing.zip

        cd c:\proj

        md dotnet_ws\src

        cd dotnet_ws

        vcs import c:\proj\dotnet_ws\src < c:\proj\ros2_dotnet\ros2_dotnet_dashing.repos

  - sh: >-
        mkdir -p /home/appveyor/projects/dotnet_ws/src

        cd /home/appveyor/projects

        wget https://github.com/ros2/ros2/releases/download/release-dashing-20190614/ros2-dashing-20190614-linux-bionic-amd64.tar.bz2

        tar xf /home/appveyor/projects/ros2-dashing-20190614-linux-bionic-amd64.tar.bz2

        ls

        sudo apt-get update && sudo apt-get install --only-upgrade python-catkin-pkg

        sudo apt-get install python3-dev python3-pip python3-tk python3-lxml python3-six python-dev -y
        _
        sudo rosdep install --from-paths ros2-linux/share --ignore-src --rosdistro dashing -y --skip-keys "console_bridge fastcdr fastrtps libopensplice67 libopensplice69 osrf_testing_tools_cpp poco_vendor rmw_connext_cpp rosidl_typesupport_connext_c rosidl_typesupport_connext_cpp rti-connext-dds-5.3.1 tinyxml_vendor tinyxml2_vendor urdfdom urdfdom_headers"

        vcs import  /home/appveyor/projects/dotnet_ws/src < /home/appveyor/projects/ros2-dotnet/ros2_dotnet_dashing.repos

 
build_script:  
  - cmd: >-
        set PATH=%PYTHON3%;%PYTHON3%\\bin;%PYTHON3%\\Scripts;%PATH%

        call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Tools\VsDevCmd.bat"

        cd  c:\proj\dotnet_ws

        rd /s /q src\ros2_dotnet\ros2_dotnet

        xcopy /e /i c:\proj\ros2_dotnet src\ros2_dotnet\ros2_dotnet

  - cmd: >-
        python --version

        call "C:\proj\ros2-windows\local_setup.bat"

        colcon build

  - sh: >-
        cd /home/appveyor/projects/dotnet_ws

        rm -r src/ros2_dotnet/ros2_dotnet

        cp -R /home/appveyor/projects/ros2-dotnet/ /home/appveyor/projects/dotnet_ws/src/ros2_dotnet/ros2_dotnet

        /bin/bash -c "alias python=python3; cd /home/appveyor/projects/dotnet_ws; source /home/appveyor/projects/ros2-linux/setup.bash; colcon build"